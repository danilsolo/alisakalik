import Alice from './alice';
import Commands from './commands';
import Context from './context';
import { IConfig } from './types/alice';
import { WebhookRequest, WebhookResponse } from './types/webhook';
import { IContext } from 'context';
export default class Scene extends Alice {
    name: string;
    enterCommand: Commands;
    leaveCommand: Commands;
    anyCallback: (ctx: Context) => void;
    commands: Commands;
    config: IConfig;
    constructor(name: any, config?: IConfig);
    readonly title: string;
    on(event: any): void;
    enter(name: any, callback: any): void;
    leave(name: any, callback: any): void;
    command(name: any, callback: any): void;
    any(callback: any): void;
    isEnterCommand(ctx: any): Promise<boolean>;
    isLeaveCommand(ctx: any): Promise<boolean>;
    handleRequest(req: WebhookRequest, sendResponse: (res: WebhookResponse) => void, ctx: IContext, type?: string): Promise<any>;
}
